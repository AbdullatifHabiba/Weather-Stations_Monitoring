
input {
  file {
    path => "/home/abdu/BigDataLabs/FinalP/weather_data.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "plain"
    type => "csv"  # Change type to csv
  }
}

filter {
  if [type] == "csv" {
    csv {
      # Define the CSV column names and their corresponding data types
      columns => ["station_id", "s_no", "battery_status", "status_timestamp", "humidity", "temperature", "wind_speed"]
      separator => ","  # Specify the CSV field separator (default is comma)
    }
    
    mutate {
      convert => {
        "station_id" => "integer"
        "s_no" => "integer"
        "status_timestamp" => "integer"
        "humidity" => "integer"
        "temperature" => "integer"
        "wind_speed" => "integer"
      }
    }
    
    date {
      match => ["status_timestamp", "UNIX"]
      target => "@timestamp"
    }
    
    # Additional filtering or processing logic can be added here if needed
  }
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    api_key => "Hh6oTY8BhJC4RiBFd_Ew:3iDDKiOKSWumI6H6m05Dpg"
    ssl_certificate_verification => false
    index => "weather-statuses"  # Set the index name where data will be stored in Elasticsearch
    ilm_enabled => true
    ilm_rollover_alias => "weather-statuses"
    ilm_pattern => "000001"
  }
}

